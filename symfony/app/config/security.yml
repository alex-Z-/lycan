# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
parameters:
    # ... other parameters
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap

security:
    encoders:
        Application\Sonata\UserBundle\Entity\User:
            algorithm: sha512
            encode_as_base64: true
            iterations: 2

    access_decision_manager:
        strategy: unanimous

    acl:
        connection: default

    role_hierarchy:
        ROLE_USER:
            - ROLE_SONATA_ADMIN
        ROLE_LYCAN_OWNER:
            - ROLE_USER
            - ROLE_SONATA_ADMIN
            - ROLE_ADMIN_BRAND_GUEST
            - ROLE_ADMIN_PROPERTY_GUEST
            - ROLE_ADMIN_LYCAN_PROVIDER_RENTIVO_GUEST
            - ROLE_ADMIN_BRAND_STAFF
            - ROLE_ADMIN_PROPERTY_STAFF
            - ROLE_ADMIN_LYCAN_PROVIDER_RENTIVO_STAFF
        ROLE_SUPER_ADMIN:
            - ROLE_ADMIN
            - ROLE_ALLOWED_TO_SWITCH
        SONATA:
            # if you are not using acl then this line must be uncommented
            #- ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT
            #- ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT
            # a:11:{i:0;s:17:"ROLE_SONATA_ADMIN";i:1;s:6:"SONATA";i:2;s:37:"ROLE_ADMIN_PROPERTY_ADMIN_PERMISSIONS";i:3;s:38:"ROLE_ADMIN_PROPERTY_OBJECT_PERMISSIONS";i:4;s:45:"ROLE_SONATA_USER_ADMIN_USER_ADMIN_PERMISSIONS";i:5;s:46:"ROLE_SONATA_USER_ADMIN_USER_OBJECT_PERMISSIONS";i:6;s:46:"ROLE_SONATA_USER_ADMIN_GROUP_ADMIN_PERMISSIONS";i:7;s:33:"ROLE_SONATA_USER_ADMIN_USER_GUEST";i:8;s:26:"ROLE_ADMIN_PROPERTY_EDITOR";i:9;s:23:"ROLE_ADMIN_BRAND_EDITOR";i:10;s:40:"ROLE_ADMIN_LYCAN_PROVIDER_RENTIVO_EDITOR";}
    providers:
        fos_userbundle:
            id: fos_user.user_manager

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern:            /admin(.*)
            context:            user
            switch_user:
                provider:   fos_userbundle
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                always_use_default_target_path: true
                default_target_path: /admin
            logout:
                path:           /admin/logout
                target:         /admin/login
            anonymous:          true

        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
                always_use_default_target_path: true
                default_target_path: /admin
            logout:
                path:           /logout
                target:         /admin/login
            anonymous:          true
            switch_user:
                provider:   fos_userbundle





    access_control:
        - { path: ^/_console, role: [ROLE_SUPER_ADMIN] }
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be accessed without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: ROLE_USER }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
